#!/usr/bin/env python

import mechanize
import httplib
import socket
import ssl
import zipfile
import os
import tempfile
import sqlite3
from datetime import datetime
from sys import argv
from sys import version_info

DOMAIN = 'titanpad.com'
PADS_URL = '/ep/padlist/all-pads.zip'
DATABASE = 'stats.db'
CURRENT_TIME = datetime.now().strftime("%Y-%m-%d %H:%M:%S")


def main():
    if len(argv) == 5:
        print_pad_stats(argv[1], argv[2], argv[3], argv[4])
    elif (len(argv) == 3):
        DATABASE = argv[2]
        update_stats_db(argv[1])
    elif (len(argv) == 2):
        update_stats_db(argv[1])
    else:
        print "Usage: "
        print "\t" + argv[0] + " <name> <pad> <user> <pass>"
        print " or: "
        print "\t" + argv[0] + " <file> [dbfile]"
        print
        print " <file> can contain multiple lines with <name> <pad> <user> <pass> format\n"
        exit(1)


def connect(self):
    if version_info < (2, 7, 0):
        sock = socket.create_connection((self.host, self.port), self.timeout)
    else:
        sock = socket.create_connection((self.host, self.port),
                                        self.timeout, self.source_address)

    if self._tunnel_host:
        self.sock = sock
        self._tunnel()
    self.sock = ssl.wrap_socket(sock, self.key_file,
                                self.cert_file,
                                ssl_version=ssl.PROTOCOL_SSLv3)

httplib.HTTPSConnection.connect = connect


def unzip(filename):
    zfile = zipfile.ZipFile(filename)
    for name in zfile.namelist():
        fd = open(name, "w")
        fd.write(zfile.read(name))
        fd.close()


def pad_lines(name, pad, user, password):
    base_url = 'http://' + pad + '.' + DOMAIN
    browser = mechanize.Browser()
    browser.open(base_url)
    browser.select_form(nr=0)
    browser.form['email'] = user
    browser.form['password'] = password
    browser.submit()

    tmpdir = tempfile.mkdtemp()
    cwd = os.getcwd()
    os.chdir(tmpdir)

    zipfilename = 'pads.zip'
    browser.retrieve(base_url + PADS_URL, zipfilename)
    unzip(zipfilename)

    num_lines = os.popen('html2text *.html | wc -l', 'r').read()

    os.chdir(cwd)
    os.system('rm -rf ' + tmpdir)

    return num_lines


def print_pad_stats(name, pad, user, password):
    num_lines = pad_lines(name, pad, user, password)
    print CURRENT_TIME, num_lines,


def sqlite_store(c, name, lines):
    c.execute("SELECT lines FROM stats WHERE name = ? ORDER BY time DESC LIMIT 1", (name,))
    result = c.fetchone()
    if (result == None) or (lines != result[0]):
        c.execute('INSERT INTO stats VALUES (?, ?, ?)', (name, lines, CURRENT_TIME))


def update_stats_db(conf):
    lines = []
    with open(conf) as f:
        lines = f.readlines()

    conn = sqlite3.connect(DATABASE)
    c = conn.cursor()
    c.execute('CREATE TABLE IF NOT EXISTS stats (name TEXT, lines INTEGER, time TEXT)')

    for line in lines:
        (name, pad, user, password) = line.split(' ')
        password = password.strip("\n")
        num_lines = pad_lines(name, pad, user, password)
        sqlite_store(c, name, num_lines)

    conn.commit()
    conn.close()

if __name__ == '__main__':
    main()

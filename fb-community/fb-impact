#!/usr/bin/env python
# -*- coding: utf-8 -*-


from urllib2 import urlopen, URLError, HTTPError, Request
from simplejson import loads
import json
import time
 
def get_json(url):

	read=False
	jsonContent={}
	while not read:
		req = Request(url)
		count = 0
		try:
			content=urlopen(url)
			jsonContent = loads(content.read())
#			print 'read'
			read=True
		except URLError as e:
			print 'URLError', e
			if count >= 10:
				print e
				jsonContent=None
				print 'Waiting for 300s'
				time.sleep(300)
				read=True
			else:
				print 'Waiting for 60s'
				count+=1
				time.sleep(60)
			
		except HTTPError as e:
			print 'HTTPError',e			
			if count>=10:
				print e.getcode()
				jsonContent=None
				print 'Waiting for 300s'
				time.sleep(300)
				read=True
			else:
				print 'Waiting for 60s'
				count+=1
				time.sleep(60)
	return jsonContent
 
 
def get_likes(post_id,accessToken):

	users=[]
	likes_url = 'https://graph.facebook.com/'+str(post_id)+'/likes?limit=200&'+ accessToken
	likes=get_json(likes_url)
	if len(likes['data']):
		users=users+likes['data']
#		print likes['data']        
		while 'next' in likes['paging']:
			nextlikes_url = likes['paging']['next']
			likes=get_json(nextlikes_url)
#			print likes['data']  
			users=users+likes['data']
	return users
	
	
def get_comments(post_id,accessToken):

	c=[]
	comments_url = 'https://graph.facebook.com/'+str(post_id)+'/comments?limit=200&'+ accessToken
	comments=get_json(comments_url)
	if len(comments['data']):
		c=c+comments['data']
#		print likes['data']        
		while 'next' in comments['paging']:
			nextcomments_url = comments['paging']['next']
			comments=get_json(nextcomments_url)
#			print likes['data']  
			c=c+comments['data']
	
	users = []
	for comment in c:
		users=users+[comment['from']] 
		
	return users

def get_user_url(user_id,accessToken):

	c=[]
	user_url = 'https://graph.facebook.com/'+str(user_id)
	print user_url
	user=get_json(user_url)
	
	if 'link' in user:
		return user['link']
	else:
		return 'None'


def get_users_ids(pageId):

	with open('fb.keys') as f:
		FACEBOOK_APP_ID = f.readline().strip("\n")
		FACEBOOK_APP_SECRET = f.readline().strip("\n")

			
	token_url='https://graph.facebook.com/oauth/access_token?grant_type=client_credentials&client_id='+FACEBOOK_APP_ID+'&client_secret='+FACEBOOK_APP_SECRET

	accessToken = urlopen(token_url).read()

#	url ='https://graph.facebook.com/'+pageId+'/posts?fields=id,message,shares,created_time&' + accessToken
	url ='https://graph.facebook.com/'+pageId+'/posts?' + accessToken
	print url
	
	jsonContent=get_json(url)
	
#	print jsonContent
	
	count=0
	cond=True
#	print 'test'

	f = open('pages/post_impact_'+pageId+'.csv','w')
	f.write(('post_id'+',message'+','+'#likes'+','+'#comments'+','+'#shares'+','+'date'+'\n').encode('utf8'))
	while cond:
		for post in jsonContent['data']:
			if 'message' in post:
				print post['id']
#				print 'application' in post
				post_id =post['id']
				message = post['message']
				if 'shares' in post:
					shares=post['shares']['count']
				else:
					shares=0
				time=post["created_time"]
				comments=len(get_comments(post['id'],accessToken))
				likes=len(get_likes(post['id'],accessToken))
				f.write((post_id+',|'+message+'|,'+str(likes)+','+str(comments)+','+str(shares)+',|'+time+'|\n').encode('utf8'))
				
				print ((post_id+',"'+message+'",'+str(likes)+','+str(comments)+','+str(shares)+',"'+time+'"\n').encode('utf8'))
		cond =  'paging' in jsonContent
	
		if cond:
			print jsonContent['paging']['next']
			url = jsonContent['paging']['next']
			jsonContent=get_json(url)

		
	f.close()
	
	return 0



get_users_ids('PartidoXPartidodelFuturo')
#get_users_ids('izquierda.unida') 





